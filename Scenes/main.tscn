[gd_scene load_steps=13 format=3 uid="uid://b1mh36mwq3q24"]

[ext_resource type="Script" uid="uid://dvd0mpgaq08hr" path="res://Scripts/Managers/WorldGeneration.cs" id="3_6iyac"]
[ext_resource type="Script" uid="uid://c5rvkoyk7fbe8" path="res://Scripts/Managers/SimManager.cs" id="3_fdnlq"]
[ext_resource type="Texture2D" uid="uid://b4vn2a225l8wb" path="res://Sprites/Biomes.png" id="6_dynbe"]
[ext_resource type="Script" uid="uid://blcppmgbqb27u" path="res://Scripts/UI/camera_controller.gd" id="6_kmkn8"]
[ext_resource type="Script" uid="uid://coij55xtv1x1s" path="res://Scenes/terrain_map.gd" id="8_plgql"]
[ext_resource type="Script" uid="uid://c0oiega1yip5i" path="res://Scripts/Managers/TimeManager.cs" id="10_fdnlq"]
[ext_resource type="Script" uid="uid://vt1lv4bf6jeb" path="res://Scripts/UI/date_label.gd" id="12_fdnlq"]
[ext_resource type="Script" uid="uid://dway8iihrur67" path="res://Scripts/UI/population_label.gd" id="13_8yh0i"]
[ext_resource type="Script" uid="uid://cn00mfk0hsqbx" path="res://Scripts/UI/tps_label.gd" id="14_m5dvi"]

[sub_resource type="GDScript" id="GDScript_ynf5e"]
script/source = "extends Node

var modsPath : String = \"res://Mods/\"
var validModPaths := []
var modids := []

func _ready() -> void:
	pass
	#loadMods(modsPath)
	#print(\"Mod loading complete: Succesfully loaded \" + str(validModPaths.size()) + \" mods\")

func loadMods(path : String) -> void:
	if DirAccess.dir_exists_absolute(path):
		print(\"Found \" + str(DirAccess.get_directories_at(path).size()) + \" directories\")
		for mod in DirAccess.get_directories_at(path):
			var modPath : String = modsPath + mod
			if DirAccess.dir_exists_absolute(modPath):
				var modJsonPath : String = modPath + \"/mod.json\"
				if (FileAccess.file_exists(modJsonPath)):
					var modJsonFile := FileAccess.open(modJsonPath, FileAccess.READ)
					var modData : Dictionary = JSON.parse_string(modJsonFile.get_as_text())
					
					if modData is Dictionary and modData.has(\"author\") and modData.has(\"version\") and modData.has(\"modid\") and modData.has(\"name\"):
						if (!modids.has(modData[\"modid\"])):
							print(\"Succesfully loaded \" + modData[\"name\"] + \" by \" + modData[\"author\"])
							print(\"Version: \" + str(modData[\"version\"]))
							if modData.has(\"description\"):
								print(\"Description: \" + modData[\"description\"])
							
							validModPaths.append(modPath)
							modids.append(modData[\"modid\"])
						else:
							print(\"Mod id already in use!\")
					else:
						print(\"Error loading mod \" + mod + \": mod.json invalid\")
				else:
					print(\"Error loading mod \" + mod + \": mod.json not found\")
			else:
				print(\"Error loading mod \" + mod + \": Path invalid\")
	else:
		print(\"Error loading mods: mods directory invalid\")
"

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_wcrxr"]
texture = ExtResource("6_dynbe")
0:0/0 = 0
0:0/0/z_index = -1
1:0/0 = 0
1:0/0/z_index = 1
0:1/0 = 0
1:1/0 = 0
1:1/0/z_index = 1
0:2/0 = 0
1:2/0 = 0
2:2/0 = 0
2:2/0/z_index = 1
3:2/0 = 0
3:2/0/z_index = -3
0:3/0 = 0
0:3/0/z_index = 1
1:3/0 = 0
1:3/0/z_index = 1
2:3/0 = 0
2:3/0/z_index = 1
3:3/0 = 0
3:3/0/modulate = Color(0, 0, 0, 1)
3:3/0/z_index = -2
3:1/0 = 0
3:1/0/z_index = -4
2:1/0 = 0
2:0/0 = 0
2:0/0/z_index = 1
3:0/0 = 0
3:0/0/z_index = 1

[sub_resource type="TileSet" id="TileSet_hda34"]
tile_size = Vector2i(12, 12)
sources/0 = SubResource("TileSetAtlasSource_wcrxr")

[node name="Main" type="Node"]
script = SubResource("GDScript_ynf5e")

[node name="Simulation" type="Node2D" parent="." node_paths=PackedStringArray("world", "timeManager")]
z_index = 10
script = ExtResource("3_fdnlq")
world = NodePath("../World")
tilesPerRegion = 8
timeManager = NodePath("../Time Manager")

[node name="RegionOverlay" type="Sprite2D" parent="Simulation"]
scale = Vector2(16, 16)
centered = false

[node name="World" type="Node2D" parent="." node_paths=PackedStringArray("biomeLoader")]
z_index = -10
z_as_relative = false
script = ExtResource("3_6iyac")
biomeLoader = NodePath("")

[node name="Terrain Map" type="TileMapLayer" parent="World" node_paths=PackedStringArray("camera", "lodMap", "regionSprite")]
scale = Vector2(1.333, 1.333)
tile_set = SubResource("TileSet_hda34")
script = ExtResource("8_plgql")
camera = NodePath("../../PlayerCamera")
lodMap = NodePath("../LOD Map")
regionSprite = NodePath("../../Simulation/RegionOverlay")
baseRegionOpacity = 1.0

[node name="LOD Map" type="Sprite2D" parent="World"]
scale = Vector2(16, 16)
centered = false

[node name="PlayerCamera" type="Camera2D" parent="."]
position = Vector2(576, 324)
script = ExtResource("6_kmkn8")
minZoom = Vector2(15, 15)

[node name="Time Manager" type="Node" parent="." node_paths=PackedStringArray("world")]
script = ExtResource("10_fdnlq")
world = NodePath("../World")
monthsPerTick = 1

[node name="UI" type="CanvasLayer" parent="."]

[node name="Population Label" type="Label" parent="UI" node_paths=PackedStringArray("simManager")]
offset_right = 40.0
offset_bottom = 23.0
theme_override_colors/font_outline_color = Color(0, 0, 0, 1)
theme_override_constants/outline_size = 10
theme_override_font_sizes/font_size = 20
text = "World Population:"
script = ExtResource("13_8yh0i")
simManager = NodePath("../../Simulation")

[node name="Date Label" type="Label" parent="UI" node_paths=PackedStringArray("timeManager")]
offset_left = 978.0
offset_right = 1152.0
offset_bottom = 28.0
theme_override_colors/font_outline_color = Color(0, 0, 0, 1)
theme_override_constants/outline_size = 10
theme_override_font_sizes/font_size = 20
text = "01/01/0000"
horizontal_alignment = 2
script = ExtResource("12_fdnlq")
timeManager = NodePath("../../Time Manager")

[node name="TPS Label" type="Label" parent="UI" node_paths=PackedStringArray("timeManager")]
offset_left = 978.0
offset_top = 31.0
offset_right = 1152.0
offset_bottom = 59.0
theme_override_colors/font_outline_color = Color(0, 0, 0, 1)
theme_override_constants/outline_size = 10
theme_override_font_sizes/font_size = 20
text = "TPS: 3"
horizontal_alignment = 2
script = ExtResource("14_m5dvi")
timeManager = NodePath("../../Time Manager")

[connection signal="worldgenFinished" from="World" to="Simulation" method="on_worldgen_finished"]
[connection signal="worldgenFinished" from="World" to="Time Manager" method="_on_world_worldgen_finished"]
